diff --git a/package-lock.json b/package-lock.json
index 33cb5ce..5a655ac 100644
--- a/package-lock.json
+++ b/package-lock.json
@@ -57,6 +57,7 @@
         "sonner": "^1.5.0",
         "tailwind-merge": "^2.5.2",
         "tailwindcss-animate": "^1.0.7",
+        "uuid": "^11.1.0",
         "vaul": "^0.9.3",
         "zod": "^3.23.8"
       },
@@ -66,6 +67,7 @@
         "@types/node": "^22.5.5",
         "@types/react": "^18.3.3",
         "@types/react-dom": "^18.3.0",
+        "@types/uuid": "^10.0.0",
         "@vitejs/plugin-react-swc": "^3.5.0",
         "autoprefixer": "^10.4.20",
         "eslint": "^9.9.0",
@@ -84,7 +86,6 @@
       "version": "5.2.0",
       "resolved": "https://registry.npmjs.org/@alloc/quick-lru/-/quick-lru-5.2.0.tgz",
       "integrity": "sha512-UrcABB+4bUrFABwbluTIBErXwvbsU/V7TZWfmbgJfbkwiBuziS9gxdODUyuiecfdGQ85jglMW6juS3+z5TsKLw==",
-      "dev": true,
       "license": "MIT",
       "engines": {
         "node": ">=10"
@@ -816,7 +817,6 @@
       "version": "8.0.2",
       "resolved": "https://registry.npmjs.org/@isaacs/cliui/-/cliui-8.0.2.tgz",
       "integrity": "sha512-O8jcjabXaleOG9DQ0+ARXWZBTfnP4WNAqzuiJK7ll44AmxGKv/J2M4TPjxjY3znBCfvBXFzucm1twdyFybFqEA==",
-      "dev": true,
       "license": "ISC",
       "dependencies": {
         "string-width": "^5.1.2",
@@ -834,7 +834,6 @@
       "version": "0.3.5",
       "resolved": "https://registry.npmjs.org/@jridgewell/gen-mapping/-/gen-mapping-0.3.5.tgz",
       "integrity": "sha512-IzL8ZoEDIBRWEzlCcRhOaCupYyN5gdIK+Q6fbFdPDg6HqX6jpkItn7DFIpW9LQzXG6Df9sA7+OKnq0qlz/GaQg==",
-      "dev": true,
       "license": "MIT",
       "dependencies": {
         "@jridgewell/set-array": "^1.2.1",
@@ -849,7 +848,6 @@
       "version": "3.1.2",
       "resolved": "https://registry.npmjs.org/@jridgewell/resolve-uri/-/resolve-uri-3.1.2.tgz",
       "integrity": "sha512-bRISgCIjP20/tbWSPWMEi54QVPRZExkuD9lJL+UIxUKtwVJA8wW1Trb1jMs1RFXo1CBTNZ/5hpC9QvmKWdopKw==",
-      "dev": true,
       "license": "MIT",
       "engines": {
         "node": ">=6.0.0"
@@ -859,7 +857,6 @@
       "version": "1.2.1",
       "resolved": "https://registry.npmjs.org/@jridgewell/set-array/-/set-array-1.2.1.tgz",
       "integrity": "sha512-R8gLRTZeyp03ymzP/6Lil/28tGeGEzhx1q2k703KGWRAI1VdvPIXdG70VJc2pAMw3NA6JKL5hhFu1sJX0Mnn/A==",
-      "dev": true,
       "license": "MIT",
       "engines": {
         "node": ">=6.0.0"
@@ -869,14 +866,12 @@
       "version": "1.5.0",
       "resolved": "https://registry.npmjs.org/@jridgewell/sourcemap-codec/-/sourcemap-codec-1.5.0.tgz",
       "integrity": "sha512-gv3ZRaISU3fjPAgNsriBRqGWQL6quFx04YMPW/zD8XMLsU32mhCCbfbO6KZFLjvYpCZ8zyDEgqsgf+PwPaM7GQ==",
-      "dev": true,
       "license": "MIT"
     },
     "node_modules/@jridgewell/trace-mapping": {
       "version": "0.3.25",
       "resolved": "https://registry.npmjs.org/@jridgewell/trace-mapping/-/trace-mapping-0.3.25.tgz",
       "integrity": "sha512-vNk6aEwybGtawWmy/PzwnGDOjCkLWSD2wqvjGGAgOAwCGWySYXfYoxt00IJkTF+8Lb57DwOb3Aa0o9CApepiYQ==",
-      "dev": true,
       "license": "MIT",
       "dependencies": {
         "@jridgewell/resolve-uri": "^3.1.0",
@@ -887,7 +882,6 @@
       "version": "2.1.5",
       "resolved": "https://registry.npmjs.org/@nodelib/fs.scandir/-/fs.scandir-2.1.5.tgz",
       "integrity": "sha512-vq24Bq3ym5HEQm2NKCr3yXDwjc7vTsEThRDnkp2DK9p1uqLR+DHurm/NOTo0KG7HYHU7eppKZj3MyqYuMBf62g==",
-      "dev": true,
       "license": "MIT",
       "dependencies": {
         "@nodelib/fs.stat": "2.0.5",
@@ -901,7 +895,6 @@
       "version": "2.0.5",
       "resolved": "https://registry.npmjs.org/@nodelib/fs.stat/-/fs.stat-2.0.5.tgz",
       "integrity": "sha512-RkhPPp2zrqDAQA/2jNhnztcPAlv64XdhIp7a7454A5ovI7Bukxgt7MX7udwAu3zg1DcpPU0rz3VV1SeaqvY4+A==",
-      "dev": true,
       "license": "MIT",
       "engines": {
         "node": ">= 8"
@@ -911,7 +904,6 @@
       "version": "1.2.8",
       "resolved": "https://registry.npmjs.org/@nodelib/fs.walk/-/fs.walk-1.2.8.tgz",
       "integrity": "sha512-oGB+UxlgWcgQkgwo8GcEGwemoTFt3FIO9ababBmaGwXIoBKZ+GTy0pP185beGg7Llih/NSHSV2XAs1lnznocSg==",
-      "dev": true,
       "license": "MIT",
       "dependencies": {
         "@nodelib/fs.scandir": "2.1.5",
@@ -925,7 +917,6 @@
       "version": "0.11.0",
       "resolved": "https://registry.npmjs.org/@pkgjs/parseargs/-/parseargs-0.11.0.tgz",
       "integrity": "sha512-+1VkjdD0QBLPodGrJUeqarH8VAIvQODIbwh9XpP5Syisf7YoQgsJKPNFoqqLQlu+VQ/tVSshMR6loPMn8U+dPg==",
-      "dev": true,
       "license": "MIT",
       "optional": true,
       "engines": {
@@ -3015,14 +3006,14 @@
       "version": "15.7.13",
       "resolved": "https://registry.npmjs.org/@types/prop-types/-/prop-types-15.7.13.tgz",
       "integrity": "sha512-hCZTSvwbzWGvhqxp/RqVqwU999pBf2vp7hzIjiYOsl8wqOmUxkQ6ddw1cV3l8811+kdUFus/q4d1Y3E3SyEifA==",
-      "dev": true,
+      "devOptional": true,
       "license": "MIT"
     },
     "node_modules/@types/react": {
       "version": "18.3.12",
       "resolved": "https://registry.npmjs.org/@types/react/-/react-18.3.12.tgz",
       "integrity": "sha512-D2wOSq/d6Agt28q7rSI3jhU7G6aiuzljDGZ2hTZHIkrTLUI+AF3WMeKkEZ9nN2fkBAlcktT6vcZjDFiIhMYEQw==",
-      "dev": true,
+      "devOptional": true,
       "license": "MIT",
       "dependencies": {
         "@types/prop-types": "*",
@@ -3033,12 +3024,19 @@
       "version": "18.3.1",
       "resolved": "https://registry.npmjs.org/@types/react-dom/-/react-dom-18.3.1.tgz",
       "integrity": "sha512-qW1Mfv8taImTthu4KoXgDfLuk4bydU6Q/TkADnDWWHwi4NX4BR+LWfTp2sVmTqRrsHvyDDTelgelxJ+SsejKKQ==",
-      "dev": true,
+      "devOptional": true,
       "license": "MIT",
       "dependencies": {
         "@types/react": "*"
       }
     },
+    "node_modules/@types/uuid": {
+      "version": "10.0.0",
+      "resolved": "https://registry.npmjs.org/@types/uuid/-/uuid-10.0.0.tgz",
+      "integrity": "sha512-7gqG38EyHgyP1S+7+xomFtL+ZNHcKv6DwNaCZmJmo1vgMugyF3TCnXVg4t1uk89mLNwnLtnY3TpOpCOyp1/xHQ==",
+      "dev": true,
+      "license": "MIT"
+    },
     "node_modules/@types/ws": {
       "version": "8.18.1",
       "resolved": "https://registry.npmjs.org/@types/ws/-/ws-8.18.1.tgz",
@@ -3334,7 +3332,6 @@
       "version": "6.1.0",
       "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-6.1.0.tgz",
       "integrity": "sha512-7HSX4QQb4CspciLpVFwyRe79O3xsIZDDLER21kERQ71oaPodF8jL725AgJMFAYbooIqolJoRLuM81SpeUkpkvA==",
-      "dev": true,
       "license": "MIT",
       "engines": {
         "node": ">=12"
@@ -3347,7 +3344,6 @@
       "version": "4.3.0",
       "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz",
       "integrity": "sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==",
-      "dev": true,
       "license": "MIT",
       "dependencies": {
         "color-convert": "^2.0.1"
@@ -3363,14 +3359,12 @@
       "version": "1.3.0",
       "resolved": "https://registry.npmjs.org/any-promise/-/any-promise-1.3.0.tgz",
       "integrity": "sha512-7UvmKalWRt1wgjL1RrGxoSJW/0QZFIegpeGvZG9kjp8vrRu55XTHbwnqq2GpXm9uLbcuhxm3IqX9OB4MZR1b2A==",
-      "dev": true,
       "license": "MIT"
     },
     "node_modules/anymatch": {
       "version": "3.1.3",
       "resolved": "https://registry.npmjs.org/anymatch/-/anymatch-3.1.3.tgz",
       "integrity": "sha512-KMReFUr0B4t+D+OBkjR3KYqvocp2XaSzO55UcB6mgQMd3KbcE+mWTyvVV7D/zsdEbNnV6acZUutkiHQXvTr1Rw==",
-      "dev": true,
       "license": "ISC",
       "dependencies": {
         "normalize-path": "^3.0.0",
@@ -3384,7 +3378,6 @@
       "version": "5.0.2",
       "resolved": "https://registry.npmjs.org/arg/-/arg-5.0.2.tgz",
       "integrity": "sha512-PYjyFOLKQ9y57JvQ6QLo8dAgNqswh8M1RMJYdQduT6xbWSgK36P/Z/v+p888pM69jMMfS8Xd8F6I1kQ/I9HUGg==",
-      "dev": true,
       "license": "MIT"
     },
     "node_modules/argparse": {
@@ -3448,14 +3441,12 @@
       "version": "1.0.2",
       "resolved": "https://registry.npmjs.org/balanced-match/-/balanced-match-1.0.2.tgz",
       "integrity": "sha512-3oSeUO0TMV67hN1AmbXsK4yaqU7tjiHlbxRDZOpH0KW9+CeX4bRAaX0Anxt0tx2MrpRpWwQaPwIlISEJhYU5Pw==",
-      "dev": true,
       "license": "MIT"
     },
     "node_modules/binary-extensions": {
       "version": "2.3.0",
       "resolved": "https://registry.npmjs.org/binary-extensions/-/binary-extensions-2.3.0.tgz",
       "integrity": "sha512-Ceh+7ox5qe7LJuLHoY0feh3pHuUDHAcRUeyL2VYghZwfpkNIy/+8Ocg0a3UuSoYzavmylwuLWQOf3hl0jjMMIw==",
-      "dev": true,
       "license": "MIT",
       "engines": {
         "node": ">=8"
@@ -3479,7 +3470,6 @@
       "version": "3.0.3",
       "resolved": "https://registry.npmjs.org/braces/-/braces-3.0.3.tgz",
       "integrity": "sha512-yQbXgO/OSZVD2IsiLlro+7Hf6Q18EJrKSEsdoMzKePKXct3gvD8oLcOQdIzGupr5Fj+EDe8gO/lxc1BzfMpxvA==",
-      "dev": true,
       "license": "MIT",
       "dependencies": {
         "fill-range": "^7.1.1"
@@ -3535,7 +3525,6 @@
       "version": "2.0.1",
       "resolved": "https://registry.npmjs.org/camelcase-css/-/camelcase-css-2.0.1.tgz",
       "integrity": "sha512-QOSvevhslijgYwRx6Rv7zKdMF8lbRmx+uQGx2+vDc+KI/eBnsy9kit5aj23AgGu3pa4t9AgwbnXWqS+iOY+2aA==",
-      "dev": true,
       "license": "MIT",
       "engines": {
         "node": ">= 6"
@@ -3583,7 +3572,6 @@
       "version": "3.6.0",
       "resolved": "https://registry.npmjs.org/chokidar/-/chokidar-3.6.0.tgz",
       "integrity": "sha512-7VT13fmjotKpGipCW9JEQAusEPE+Ei8nl6/g4FBAmIm0GOOLMua9NDDo/DWp0ZAxCr3cPq5ZpBqmPAQgDda2Pw==",
-      "dev": true,
       "license": "MIT",
       "dependencies": {
         "anymatch": "~3.1.2",
@@ -3608,7 +3596,6 @@
       "version": "5.1.2",
       "resolved": "https://registry.npmjs.org/glob-parent/-/glob-parent-5.1.2.tgz",
       "integrity": "sha512-AOIgSQCepiJYwP3ARnGx+5VnTu2HBYdzbGP45eLw1vr3zB3vZLeyed1sC9hnbcOc9/SrMyM5RPQrkGz4aS9Zow==",
-      "dev": true,
       "license": "ISC",
       "dependencies": {
         "is-glob": "^4.0.1"
@@ -4019,7 +4006,6 @@
       "version": "2.0.1",
       "resolved": "https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz",
       "integrity": "sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==",
-      "dev": true,
       "license": "MIT",
       "dependencies": {
         "color-name": "~1.1.4"
@@ -4032,14 +4018,12 @@
       "version": "1.1.4",
       "resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz",
       "integrity": "sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==",
-      "dev": true,
       "license": "MIT"
     },
     "node_modules/commander": {
       "version": "4.1.1",
       "resolved": "https://registry.npmjs.org/commander/-/commander-4.1.1.tgz",
       "integrity": "sha512-NOKm8xhkzAjzFx8B2v5OAHT+u5pRQc2UCa2Vq9jYL/31o2wi9mxBA7LIFs3sV5VSC49z6pEhfbMULvShKj26WA==",
-      "dev": true,
       "license": "MIT",
       "engines": {
         "node": ">= 6"
@@ -4056,7 +4040,6 @@
       "version": "7.0.6",
       "resolved": "https://registry.npmjs.org/cross-spawn/-/cross-spawn-7.0.6.tgz",
       "integrity": "sha512-uV2QOWP2nWzsy2aMp8aRibhi9dlzF5Hgh5SHaB9OiTGEyDTiJJyx0uy51QXdyWbtAHNua4XJzUKca3OzKUd3vA==",
-      "dev": true,
       "dependencies": {
         "path-key": "^3.1.0",
         "shebang-command": "^2.0.0",
@@ -4070,7 +4053,6 @@
       "version": "3.0.0",
       "resolved": "https://registry.npmjs.org/cssesc/-/cssesc-3.0.0.tgz",
       "integrity": "sha512-/Tb/JcjK111nNScGob5MNtsntNM1aCNUDipB/TkwZFhyDrrE47SOx/18wF2bbjgc3ZzCSKW1T5nt5EbFoAz/Vg==",
-      "dev": true,
       "license": "MIT",
       "bin": {
         "cssesc": "bin/cssesc"
@@ -4257,14 +4239,12 @@
       "version": "1.2.2",
       "resolved": "https://registry.npmjs.org/didyoumean/-/didyoumean-1.2.2.tgz",
       "integrity": "sha512-gxtyfqMg7GKyhQmb056K7M3xszy/myH8w+B4RT+QXBQsvAOdc3XymqDDPHx1BgPgsdAA5SIifona89YtRATDzw==",
-      "dev": true,
       "license": "Apache-2.0"
     },
     "node_modules/dlv": {
       "version": "1.1.3",
       "resolved": "https://registry.npmjs.org/dlv/-/dlv-1.1.3.tgz",
       "integrity": "sha512-+HlytyjlPKnIG8XuRG8WvmBP8xs8P71y+SKKS6ZXWoEgLuePxtDoUEiH7WkdePWrQ5JBpE6aoVqfZfJUQkjXwA==",
-      "dev": true,
       "license": "MIT"
     },
     "node_modules/dom-helpers": {
@@ -4281,7 +4261,6 @@
       "version": "0.2.0",
       "resolved": "https://registry.npmjs.org/eastasianwidth/-/eastasianwidth-0.2.0.tgz",
       "integrity": "sha512-I88TYZWc9XiYHRQ4/3c5rjjfgkjhLyW2luGIheGERbNQ6OY7yTybanSpDXZa8y7VUP9YmDcYa+eyq4ca7iLqWA==",
-      "dev": true,
       "license": "MIT"
     },
     "node_modules/electron-to-chromium": {
@@ -4323,7 +4302,6 @@
       "version": "9.2.2",
       "resolved": "https://registry.npmjs.org/emoji-regex/-/emoji-regex-9.2.2.tgz",
       "integrity": "sha512-L18DaJsXSUk2+42pv8mLs5jJT2hqFkFE4j21wOmgbUqsZ2hL72NsUU785g9RXgo3s0ZNgVl42TiHp3ZtOv/Vyg==",
-      "dev": true,
       "license": "MIT"
     },
     "node_modules/esbuild": {
@@ -4602,7 +4580,6 @@
       "version": "3.3.2",
       "resolved": "https://registry.npmjs.org/fast-glob/-/fast-glob-3.3.2.tgz",
       "integrity": "sha512-oX2ruAFQwf/Orj8m737Y5adxDQO0LAB7/S5MnxCdTNDd4p6BsyIVsv9JQsATbTSq8KHRpLwIHbVlUNatxd+1Ow==",
-      "dev": true,
       "license": "MIT",
       "dependencies": {
         "@nodelib/fs.stat": "^2.0.2",
@@ -4619,7 +4596,6 @@
       "version": "5.1.2",
       "resolved": "https://registry.npmjs.org/glob-parent/-/glob-parent-5.1.2.tgz",
       "integrity": "sha512-AOIgSQCepiJYwP3ARnGx+5VnTu2HBYdzbGP45eLw1vr3zB3vZLeyed1sC9hnbcOc9/SrMyM5RPQrkGz4aS9Zow==",
-      "dev": true,
       "license": "ISC",
       "dependencies": {
         "is-glob": "^4.0.1"
@@ -4646,7 +4622,6 @@
       "version": "1.17.1",
       "resolved": "https://registry.npmjs.org/fastq/-/fastq-1.17.1.tgz",
       "integrity": "sha512-sRVD3lWVIXWg6By68ZN7vho9a1pQcN/WBFaAAsDDFzlJjvoGx0P8z7V1t72grFJfJhu3YPZBuu25f7Kaw2jN1w==",
-      "dev": true,
       "license": "ISC",
       "dependencies": {
         "reusify": "^1.0.4"
@@ -4669,7 +4644,6 @@
       "version": "7.1.1",
       "resolved": "https://registry.npmjs.org/fill-range/-/fill-range-7.1.1.tgz",
       "integrity": "sha512-YsGpe3WHLK8ZYi4tWDg2Jy3ebRz2rXowDxnld4bkQB00cc/1Zw9AWnC0i9ztDJitivtQvaI9KaLyKrc+hBW0yg==",
-      "dev": true,
       "license": "MIT",
       "dependencies": {
         "to-regex-range": "^5.0.1"
@@ -4720,7 +4694,6 @@
       "version": "3.3.0",
       "resolved": "https://registry.npmjs.org/foreground-child/-/foreground-child-3.3.0.tgz",
       "integrity": "sha512-Ld2g8rrAyMYFXBhEqMz8ZAHBi4J4uS1i/CxGMDnjyFWddMXLVcDp051DZfu+t7+ab7Wv6SMqpWmyFIj5UbfFvg==",
-      "dev": true,
       "license": "ISC",
       "dependencies": {
         "cross-spawn": "^7.0.0",
@@ -4751,7 +4724,6 @@
       "version": "2.3.3",
       "resolved": "https://registry.npmjs.org/fsevents/-/fsevents-2.3.3.tgz",
       "integrity": "sha512-5xoDfX+fL7faATnagmWPpbFtwh/R77WmMMqqHGS65C3vvB0YHrgF+B1YmZ3441tMj5n63k0212XNoJwzlhffQw==",
-      "dev": true,
       "hasInstallScript": true,
       "license": "MIT",
       "optional": true,
@@ -4766,7 +4738,6 @@
       "version": "1.1.2",
       "resolved": "https://registry.npmjs.org/function-bind/-/function-bind-1.1.2.tgz",
       "integrity": "sha512-7XHNxH7qX9xG5mIwxkhumTox/MIRNcOgDrxWsMt2pAr23WHp6MrRlN7FBSFpCpr+oVO0F744iUgR82nJMfG2SA==",
-      "dev": true,
       "license": "MIT",
       "funding": {
         "url": "https://github.com/sponsors/ljharb"
@@ -4785,7 +4756,6 @@
       "version": "10.4.5",
       "resolved": "https://registry.npmjs.org/glob/-/glob-10.4.5.tgz",
       "integrity": "sha512-7Bv8RF0k6xjo7d4A/PxYLbUCfb6c+Vpd2/mB2yRDlew7Jb5hEXiCD9ibfO7wpk8i4sevK6DFny9h7EYbM3/sHg==",
-      "dev": true,
       "license": "ISC",
       "dependencies": {
         "foreground-child": "^3.1.0",
@@ -4806,7 +4776,6 @@
       "version": "6.0.2",
       "resolved": "https://registry.npmjs.org/glob-parent/-/glob-parent-6.0.2.tgz",
       "integrity": "sha512-XxwI8EOhVQgWp6iDL+3b0r86f4d6AX6zSU55HfB4ydCEuXLXc5FcYeOu+nnGftS4TEju/11rt4KJPTMgbfmv4A==",
-      "dev": true,
       "license": "ISC",
       "dependencies": {
         "is-glob": "^4.0.3"
@@ -4819,7 +4788,6 @@
       "version": "2.0.1",
       "resolved": "https://registry.npmjs.org/brace-expansion/-/brace-expansion-2.0.1.tgz",
       "integrity": "sha512-XnAIvQ8eM+kC6aULx6wuQiwVsnzsi9d3WxzV3FpWTGA19F621kwdbsAcFKXgKUHZWsy+mY6iL1sHTxWEFCytDA==",
-      "dev": true,
       "license": "MIT",
       "dependencies": {
         "balanced-match": "^1.0.0"
@@ -4829,7 +4797,6 @@
       "version": "9.0.5",
       "resolved": "https://registry.npmjs.org/minimatch/-/minimatch-9.0.5.tgz",
       "integrity": "sha512-G6T0ZX48xgozx7587koeX9Ys2NYy6Gmv//P89sEte9V9whIapMNF4idKxnW2QtCcLiTWlb/wfCabAtAFWhhBow==",
-      "dev": true,
       "license": "ISC",
       "dependencies": {
         "brace-expansion": "^2.0.1"
@@ -4875,7 +4842,6 @@
       "version": "2.0.2",
       "resolved": "https://registry.npmjs.org/hasown/-/hasown-2.0.2.tgz",
       "integrity": "sha512-0hJU9SCPvmMzIBdZFqNPXWa6dqh7WdH0cII9y+CyS8rG3nL48Bclra9HmKhVVUHyPWNH5Y7xDwAB7bfgSjkUMQ==",
-      "dev": true,
       "license": "MIT",
       "dependencies": {
         "function-bind": "^1.1.2"
@@ -4953,7 +4919,6 @@
       "version": "2.1.0",
       "resolved": "https://registry.npmjs.org/is-binary-path/-/is-binary-path-2.1.0.tgz",
       "integrity": "sha512-ZMERYes6pDydyuGidse7OsHxtbI7WVeUEozgR/g7rd0xUimYNlvZRE/K2MgZTjWy725IfelLeVcEM97mmtRGXw==",
-      "dev": true,
       "license": "MIT",
       "dependencies": {
         "binary-extensions": "^2.0.0"
@@ -4966,7 +4931,6 @@
       "version": "2.15.1",
       "resolved": "https://registry.npmjs.org/is-core-module/-/is-core-module-2.15.1.tgz",
       "integrity": "sha512-z0vtXSwucUJtANQWldhbtbt7BnL0vxiFjIdDLAatwhDYty2bad6s+rijD6Ri4YuYJubLzIJLUidCh09e1djEVQ==",
-      "dev": true,
       "license": "MIT",
       "dependencies": {
         "hasown": "^2.0.2"
@@ -4982,7 +4946,6 @@
       "version": "2.1.1",
       "resolved": "https://registry.npmjs.org/is-extglob/-/is-extglob-2.1.1.tgz",
       "integrity": "sha512-SbKbANkN603Vi4jEZv49LeVJMn4yGwsbzZworEoyEiutsN3nJYdbO36zfhGJ6QEDpOZIFkDtnq5JRxmvl3jsoQ==",
-      "dev": true,
       "license": "MIT",
       "engines": {
         "node": ">=0.10.0"
@@ -4992,7 +4955,6 @@
       "version": "3.0.0",
       "resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-3.0.0.tgz",
       "integrity": "sha512-zymm5+u+sCsSWyD9qNaejV3DFvhCKclKdizYaJUuHA83RLjb7nSuGnddCHGv0hk+KY7BMAlsWeK4Ueg6EV6XQg==",
-      "dev": true,
       "license": "MIT",
       "engines": {
         "node": ">=8"
@@ -5002,7 +4964,6 @@
       "version": "4.0.3",
       "resolved": "https://registry.npmjs.org/is-glob/-/is-glob-4.0.3.tgz",
       "integrity": "sha512-xelSayHH36ZgE7ZWhli7pW34hNbNl8Ojv5KVmkJD4hBdD3th8Tfk9vYasLM+mXWOZhFkgZfxhLSnrwRr4elSSg==",
-      "dev": true,
       "license": "MIT",
       "dependencies": {
         "is-extglob": "^2.1.1"
@@ -5015,7 +4976,6 @@
       "version": "7.0.0",
       "resolved": "https://registry.npmjs.org/is-number/-/is-number-7.0.0.tgz",
       "integrity": "sha512-41Cifkg6e8TylSpdtTpeLVMqvSBEVzTttHvERD741+pnZ8ANv0004MRL43QKPDlK9cGvNp6NZWZUBlbGXYxxng==",
-      "dev": true,
       "license": "MIT",
       "engines": {
         "node": ">=0.12.0"
@@ -5025,14 +4985,12 @@
       "version": "2.0.0",
       "resolved": "https://registry.npmjs.org/isexe/-/isexe-2.0.0.tgz",
       "integrity": "sha512-RHxMLp9lnKHGHRng9QFhRCMbYAcVpn69smSGcq3f36xjgVVWThj4qqLbTLlq7Ssj8B+fIQ1EuCEGI2lKsyQeIw==",
-      "dev": true,
       "license": "ISC"
     },
     "node_modules/jackspeak": {
       "version": "3.4.3",
       "resolved": "https://registry.npmjs.org/jackspeak/-/jackspeak-3.4.3.tgz",
       "integrity": "sha512-OGlZQpz2yfahA/Rd1Y8Cd9SIEsqvXkLVoSw/cgwhnhFMDbsQFeZYoJJ7bIZBS9BcamUW96asq/npPWugM+RQBw==",
-      "dev": true,
       "license": "BlueOak-1.0.0",
       "dependencies": {
         "@isaacs/cliui": "^8.0.2"
@@ -5048,7 +5006,6 @@
       "version": "1.21.6",
       "resolved": "https://registry.npmjs.org/jiti/-/jiti-1.21.6.tgz",
       "integrity": "sha512-2yTgeWTWzMWkHu6Jp9NKgePDaYHbntiwvYuuJLbbN9vl7DC9DvXKOB2BC3ZZ92D3cvV/aflH0osDfwpHepQ53w==",
-      "dev": true,
       "license": "MIT",
       "bin": {
         "jiti": "bin/jiti.js"
@@ -5122,7 +5079,6 @@
       "version": "3.1.3",
       "resolved": "https://registry.npmjs.org/lilconfig/-/lilconfig-3.1.3.tgz",
       "integrity": "sha512-/vlFKAoH5Cgt3Ie+JLhRbwOsCQePABiU3tJ1egGvyQ+33R/vcwM2Zl2QR/LzjsBeItPt3oSVXapn+m4nQDvpzw==",
-      "dev": true,
       "license": "MIT",
       "engines": {
         "node": ">=14"
@@ -5135,7 +5091,6 @@
       "version": "1.2.4",
       "resolved": "https://registry.npmjs.org/lines-and-columns/-/lines-and-columns-1.2.4.tgz",
       "integrity": "sha512-7ylylesZQ/PV29jhEDl3Ufjo6ZX7gCqJr5F7PKrqc93v7fzSymt1BpwEU8nAUXs8qzzvqhbjhK5QZg6Mt/HkBg==",
-      "dev": true,
       "license": "MIT"
     },
     "node_modules/locate-path": {
@@ -5645,7 +5600,6 @@
       "version": "10.4.3",
       "resolved": "https://registry.npmjs.org/lru-cache/-/lru-cache-10.4.3.tgz",
       "integrity": "sha512-JNAzZcXrCt42VGLuYz0zfAzDfAvJWW6AfYlDBQyDV5DClI2m5sAmK+OIO7s59XfsRsWHp02jAJrRadPRGTt6SQ==",
-      "dev": true,
       "license": "ISC"
     },
     "node_modules/lucide-react": {
@@ -5670,7 +5624,6 @@
       "version": "1.4.1",
       "resolved": "https://registry.npmjs.org/merge2/-/merge2-1.4.1.tgz",
       "integrity": "sha512-8q7VEgMJW4J8tcfVPy8g09NcQwZdbwFEqhe/WZkoIzjn/3TGDwtOCYtXGxA3O8tPzpczCCDgv+P2P5y00ZJOOg==",
-      "dev": true,
       "license": "MIT",
       "engines": {
         "node": ">= 8"
@@ -5680,7 +5633,6 @@
       "version": "4.0.8",
       "resolved": "https://registry.npmjs.org/micromatch/-/micromatch-4.0.8.tgz",
       "integrity": "sha512-PXwfBhYu0hBCPw8Dn0E+WDYb7af3dSLVWKi3HGv84IdF4TyFoC0ysxFd0Goxw7nSv4T/PzEJQxsYsEiFCKo2BA==",
-      "dev": true,
       "license": "MIT",
       "dependencies": {
         "braces": "^3.0.3",
@@ -5707,7 +5659,6 @@
       "version": "7.1.2",
       "resolved": "https://registry.npmjs.org/minipass/-/minipass-7.1.2.tgz",
       "integrity": "sha512-qOOzS1cBTWYF4BH8fVePDBOO9iptMnGUEZwNc/cMWnTV2nVLZ7VoNWEPHkYczZA0pdoA7dl6e7FL659nX9S2aw==",
-      "dev": true,
       "license": "ISC",
       "engines": {
         "node": ">=16 || 14 >=14.17"
@@ -5724,7 +5675,6 @@
       "version": "2.7.0",
       "resolved": "https://registry.npmjs.org/mz/-/mz-2.7.0.tgz",
       "integrity": "sha512-z81GNO7nnYMEhrGh9LeymoE4+Yr0Wn5McHIZMK5cfQCl+NDX08sCZgUc9/6MHni9IWuFLm1Z3HTCXu2z9fN62Q==",
-      "dev": true,
       "license": "MIT",
       "dependencies": {
         "any-promise": "^1.0.0",
@@ -5736,7 +5686,6 @@
       "version": "3.3.7",
       "resolved": "https://registry.npmjs.org/nanoid/-/nanoid-3.3.7.tgz",
       "integrity": "sha512-eSRppjcPIatRIMC1U6UngP8XFcz8MQWGQdt1MTBQ7NaAmvXDfvNxbvWV3x2y6CdEUciCSsDHDQZbhYaB8QEo2g==",
-      "dev": true,
       "funding": [
         {
           "type": "github",
@@ -5779,7 +5728,6 @@
       "version": "3.0.0",
       "resolved": "https://registry.npmjs.org/normalize-path/-/normalize-path-3.0.0.tgz",
       "integrity": "sha512-6eZs5Ls3WtCisHWp9S2GUy8dqkpGi4BVSz3GaqiE6ezub0512ESztXUwUB6C6IKbQkY2Pnb/mD4WYojCRwcwLA==",
-      "dev": true,
       "license": "MIT",
       "engines": {
         "node": ">=0.10.0"
@@ -5808,7 +5756,6 @@
       "version": "3.0.0",
       "resolved": "https://registry.npmjs.org/object-hash/-/object-hash-3.0.0.tgz",
       "integrity": "sha512-RSn9F68PjH9HqtltsSnqYC1XXoWe9Bju5+213R98cNGttag9q9yAOTzdbsqvIa7aNm5WffBZFpWYr2aWrklWAw==",
-      "dev": true,
       "license": "MIT",
       "engines": {
         "node": ">= 6"
@@ -5868,7 +5815,6 @@
       "version": "1.0.1",
       "resolved": "https://registry.npmjs.org/package-json-from-dist/-/package-json-from-dist-1.0.1.tgz",
       "integrity": "sha512-UEZIS3/by4OC8vL3P2dTXRETpebLI2NiI5vIrjaD/5UtrkFX/tNbwjTSRAGC/+7CAo2pIcBaRgWmcBBHcsaCIw==",
-      "dev": true,
       "license": "BlueOak-1.0.0"
     },
     "node_modules/parent-module": {
@@ -5898,7 +5844,6 @@
       "version": "3.1.1",
       "resolved": "https://registry.npmjs.org/path-key/-/path-key-3.1.1.tgz",
       "integrity": "sha512-ojmeN0qd+y0jszEtoY48r0Peq5dwMEkIlCOu6Q5f41lfkswXuKtYrhgoTpLnyIcHm24Uhqx+5Tqm2InSwLhE6Q==",
-      "dev": true,
       "license": "MIT",
       "engines": {
         "node": ">=8"
@@ -5908,14 +5853,12 @@
       "version": "1.0.7",
       "resolved": "https://registry.npmjs.org/path-parse/-/path-parse-1.0.7.tgz",
       "integrity": "sha512-LDJzPVEEEPR+y48z93A0Ed0yXb8pAByGWo/k5YYdYgpY2/2EsOsksJrq7lOHxryrVOn1ejG6oAp8ahvOIQD8sw==",
-      "dev": true,
       "license": "MIT"
     },
     "node_modules/path-scurry": {
       "version": "1.11.1",
       "resolved": "https://registry.npmjs.org/path-scurry/-/path-scurry-1.11.1.tgz",
       "integrity": "sha512-Xa4Nw17FS9ApQFJ9umLiJS4orGjm7ZzwUrwamcGQuHSzDyth9boKDaycYdDcZDuqYATXw4HFXgaqWTctW/v1HA==",
-      "dev": true,
       "license": "BlueOak-1.0.0",
       "dependencies": {
         "lru-cache": "^10.2.0",
@@ -5932,14 +5875,12 @@
       "version": "1.1.1",
       "resolved": "https://registry.npmjs.org/picocolors/-/picocolors-1.1.1.tgz",
       "integrity": "sha512-xceH2snhtb5M9liqDsmEw56le376mTZkEX/jEb/RxNFyegNul7eNslCXP9FDj/Lcu0X8KEyMceP2ntpaHrDEVA==",
-      "dev": true,
       "license": "ISC"
     },
     "node_modules/picomatch": {
       "version": "2.3.1",
       "resolved": "https://registry.npmjs.org/picomatch/-/picomatch-2.3.1.tgz",
       "integrity": "sha512-JU3teHTNjmE2VCGFzuY8EXzCDVwEqB2a8fsIvwaStHhAWJEeVd1o1QD80CU6+ZdEXXSLbSsuLwJjkCBWqRQUVA==",
-      "dev": true,
       "license": "MIT",
       "engines": {
         "node": ">=8.6"
@@ -5952,7 +5893,6 @@
       "version": "2.3.0",
       "resolved": "https://registry.npmjs.org/pify/-/pify-2.3.0.tgz",
       "integrity": "sha512-udgsAY+fTnvv7kI7aaxbqwWNb0AHiB0qBO89PZKPkoTmGOgdbrHDKD+0B2X4uTfJ/FT1R09r9gTsjUjNJotuog==",
-      "dev": true,
       "license": "MIT",
       "engines": {
         "node": ">=0.10.0"
@@ -5962,7 +5902,6 @@
       "version": "4.0.6",
       "resolved": "https://registry.npmjs.org/pirates/-/pirates-4.0.6.tgz",
       "integrity": "sha512-saLsH7WeYYPiD25LDuLRRY/i+6HaPYr6G1OUlN39otzkSTxKnubR9RTxS3/Kk50s1g2JTgFwWQDQyplC5/SHZg==",
-      "dev": true,
       "license": "MIT",
       "engines": {
         "node": ">= 6"
@@ -5972,7 +5911,6 @@
       "version": "8.4.47",
       "resolved": "https://registry.npmjs.org/postcss/-/postcss-8.4.47.tgz",
       "integrity": "sha512-56rxCq7G/XfB4EkXq9Egn5GCqugWvDFjafDOThIdMBsI15iqPqR5r15TfSr1YPYeEI19YeaXMCbY6u88Y76GLQ==",
-      "dev": true,
       "funding": [
         {
           "type": "opencollective",
@@ -6001,7 +5939,6 @@
       "version": "15.1.0",
       "resolved": "https://registry.npmjs.org/postcss-import/-/postcss-import-15.1.0.tgz",
       "integrity": "sha512-hpr+J05B2FVYUAXHeK1YyI267J/dDDhMU6B6civm8hSY1jYJnBXxzKDKDswzJmtLHryrjhnDjqqp/49t8FALew==",
-      "dev": true,
       "license": "MIT",
       "dependencies": {
         "postcss-value-parser": "^4.0.0",
@@ -6019,7 +5956,6 @@
       "version": "4.0.1",
       "resolved": "https://registry.npmjs.org/postcss-js/-/postcss-js-4.0.1.tgz",
       "integrity": "sha512-dDLF8pEO191hJMtlHFPRa8xsizHaM82MLfNkUHdUtVEV3tgTp5oj+8qbEqYM57SLfc74KSbw//4SeJma2LRVIw==",
-      "dev": true,
       "license": "MIT",
       "dependencies": {
         "camelcase-css": "^2.0.1"
@@ -6039,7 +5975,6 @@
       "version": "4.0.2",
       "resolved": "https://registry.npmjs.org/postcss-load-config/-/postcss-load-config-4.0.2.tgz",
       "integrity": "sha512-bSVhyJGL00wMVoPUzAVAnbEoWyqRxkjv64tUl427SKnPrENtq6hJwUojroMz2VB+Q1edmi4IfrAPpami5VVgMQ==",
-      "dev": true,
       "funding": [
         {
           "type": "opencollective",
@@ -6075,7 +6010,6 @@
       "version": "6.2.0",
       "resolved": "https://registry.npmjs.org/postcss-nested/-/postcss-nested-6.2.0.tgz",
       "integrity": "sha512-HQbt28KulC5AJzG+cZtj9kvKB93CFCdLvog1WFLf1D+xmMvPGlBstkpTEZfK5+AN9hfJocyBFCNiqyS48bpgzQ==",
-      "dev": true,
       "funding": [
         {
           "type": "opencollective",
@@ -6101,7 +6035,6 @@
       "version": "6.1.2",
       "resolved": "https://registry.npmjs.org/postcss-selector-parser/-/postcss-selector-parser-6.1.2.tgz",
       "integrity": "sha512-Q8qQfPiZ+THO/3ZrOrO0cJJKfpYCagtMUkXbnEfmgUjwXg6z/WBeOyS9APBBPCTSiDV+s4SwQGu8yFsiMRIudg==",
-      "dev": true,
       "license": "MIT",
       "dependencies": {
         "cssesc": "^3.0.0",
@@ -6115,7 +6048,6 @@
       "version": "4.2.0",
       "resolved": "https://registry.npmjs.org/postcss-value-parser/-/postcss-value-parser-4.2.0.tgz",
       "integrity": "sha512-1NNCs6uurfkVbeXG4S8JFT9t19m45ICnif8zWLd5oPSZ50QnwMfK+H3jv408d4jw/7Bttv5axS5IiHoLaVNHeQ==",
-      "dev": true,
       "license": "MIT"
     },
     "node_modules/prelude-ls": {
@@ -6159,7 +6091,6 @@
       "version": "1.2.3",
       "resolved": "https://registry.npmjs.org/queue-microtask/-/queue-microtask-1.2.3.tgz",
       "integrity": "sha512-NuaNSa6flKT5JaSYQzJok04JzTL1CA6aGhv5rfLW3PgqA+M2ChpZQnAC8h8i4ZFkBS8X5RqkDBHA7r4hej3K9A==",
-      "dev": true,
       "funding": [
         {
           "type": "github",
@@ -6384,7 +6315,6 @@
       "version": "1.0.0",
       "resolved": "https://registry.npmjs.org/read-cache/-/read-cache-1.0.0.tgz",
       "integrity": "sha512-Owdv/Ft7IjOgm/i0xvNDZ1LrRANRfew4b2prF3OWMQLxLfu3bS8FVhCsrSCMK4lR56Y9ya+AThoTpDCTxCmpRA==",
-      "dev": true,
       "license": "MIT",
       "dependencies": {
         "pify": "^2.3.0"
@@ -6394,7 +6324,6 @@
       "version": "3.6.0",
       "resolved": "https://registry.npmjs.org/readdirp/-/readdirp-3.6.0.tgz",
       "integrity": "sha512-hOS089on8RduqdbhvQ5Z37A0ESjsqz6qnRcffsMU3495FuTdqSm+7bhJ29JvIOsBDEEnan5DPu9t3To9VRlMzA==",
-      "dev": true,
       "license": "MIT",
       "dependencies": {
         "picomatch": "^2.2.1"
@@ -6445,7 +6374,6 @@
       "version": "1.22.8",
       "resolved": "https://registry.npmjs.org/resolve/-/resolve-1.22.8.tgz",
       "integrity": "sha512-oKWePCxqpd6FlLvGV1VU0x7bkPmmCNolxzjMf4NczoDnQcIWrAF+cPtZn5i6n+RfD2d9i0tzpKnG6Yk168yIyw==",
-      "dev": true,
       "license": "MIT",
       "dependencies": {
         "is-core-module": "^2.13.0",
@@ -6473,7 +6401,6 @@
       "version": "1.0.4",
       "resolved": "https://registry.npmjs.org/reusify/-/reusify-1.0.4.tgz",
       "integrity": "sha512-U9nH88a3fc/ekCF1l0/UP1IosiuIjyTh7hBvXVMHYgVcfGvt897Xguj2UOLDeI5BG2m7/uwyaLVT6fbtCwTyzw==",
-      "dev": true,
       "license": "MIT",
       "engines": {
         "iojs": ">=1.0.0",
@@ -6520,7 +6447,6 @@
       "version": "1.2.0",
       "resolved": "https://registry.npmjs.org/run-parallel/-/run-parallel-1.2.0.tgz",
       "integrity": "sha512-5l4VyZR86LZ/lDxZTR6jqL8AFE2S0IFLMP26AbjsLVADxHdhB/c0GUsH+y39UfCi3dzz8OlQuPmnaJOMoDHQBA==",
-      "dev": true,
       "funding": [
         {
           "type": "github",
@@ -6566,7 +6492,6 @@
       "version": "2.0.0",
       "resolved": "https://registry.npmjs.org/shebang-command/-/shebang-command-2.0.0.tgz",
       "integrity": "sha512-kHxr2zZpYtdmrN1qDjrrX/Z1rR1kG8Dx+gkpK1G4eXmvXswmcE1hTWBWYUzlraYw1/yZp6YuDY77YtvbN0dmDA==",
-      "dev": true,
       "license": "MIT",
       "dependencies": {
         "shebang-regex": "^3.0.0"
@@ -6579,7 +6504,6 @@
       "version": "3.0.0",
       "resolved": "https://registry.npmjs.org/shebang-regex/-/shebang-regex-3.0.0.tgz",
       "integrity": "sha512-7++dFhtcx3353uBaq8DDR4NuxBetBzC7ZQOhmTQInHEd6bSrXdiEyzCvG07Z44UYdLShWUyXt5M/yhz8ekcb1A==",
-      "dev": true,
       "license": "MIT",
       "engines": {
         "node": ">=8"
@@ -6589,7 +6513,6 @@
       "version": "4.1.0",
       "resolved": "https://registry.npmjs.org/signal-exit/-/signal-exit-4.1.0.tgz",
       "integrity": "sha512-bzyZ1e88w9O1iNJbKnOlvYTrWPDl46O1bG0D3XInv+9tkPrxrN8jUUTiFlDkkmKWgn1M6CfIA13SuGqOa9Korw==",
-      "dev": true,
       "license": "ISC",
       "engines": {
         "node": ">=14"
@@ -6612,7 +6535,6 @@
       "version": "1.2.1",
       "resolved": "https://registry.npmjs.org/source-map-js/-/source-map-js-1.2.1.tgz",
       "integrity": "sha512-UXWMKhLOwVKb728IUtQPXxfYU+usdybtUrK/8uGE8CQMvrhOpwvzDBwj0QhSL7MQc7vIsISBG8VQ8+IDQxpfQA==",
-      "dev": true,
       "license": "BSD-3-Clause",
       "engines": {
         "node": ">=0.10.0"
@@ -6622,7 +6544,6 @@
       "version": "5.1.2",
       "resolved": "https://registry.npmjs.org/string-width/-/string-width-5.1.2.tgz",
       "integrity": "sha512-HnLOCR3vjcY8beoNLtcjZ5/nxn2afmME6lhrDrebokqMap+XbeW8n9TXpPDOqdGK5qcI3oT0GKTW6wC7EMiVqA==",
-      "dev": true,
       "license": "MIT",
       "dependencies": {
         "eastasianwidth": "^0.2.0",
@@ -6641,7 +6562,6 @@
       "version": "4.2.3",
       "resolved": "https://registry.npmjs.org/string-width/-/string-width-4.2.3.tgz",
       "integrity": "sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==",
-      "dev": true,
       "license": "MIT",
       "dependencies": {
         "emoji-regex": "^8.0.0",
@@ -6656,7 +6576,6 @@
       "version": "5.0.1",
       "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.1.tgz",
       "integrity": "sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==",
-      "dev": true,
       "license": "MIT",
       "engines": {
         "node": ">=8"
@@ -6666,14 +6585,12 @@
       "version": "8.0.0",
       "resolved": "https://registry.npmjs.org/emoji-regex/-/emoji-regex-8.0.0.tgz",
       "integrity": "sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A==",
-      "dev": true,
       "license": "MIT"
     },
     "node_modules/string-width-cjs/node_modules/strip-ansi": {
       "version": "6.0.1",
       "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz",
       "integrity": "sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==",
-      "dev": true,
       "license": "MIT",
       "dependencies": {
         "ansi-regex": "^5.0.1"
@@ -6686,7 +6603,6 @@
       "version": "7.1.0",
       "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-7.1.0.tgz",
       "integrity": "sha512-iq6eVVI64nQQTRYq2KtEg2d2uU7LElhTJwsH4YzIHZshxlgZms/wIc4VoDQTlG/IvVIrBKG06CrZnp0qv7hkcQ==",
-      "dev": true,
       "license": "MIT",
       "dependencies": {
         "ansi-regex": "^6.0.1"
@@ -6703,7 +6619,6 @@
       "version": "6.0.1",
       "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz",
       "integrity": "sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==",
-      "dev": true,
       "license": "MIT",
       "dependencies": {
         "ansi-regex": "^5.0.1"
@@ -6716,7 +6631,6 @@
       "version": "5.0.1",
       "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.1.tgz",
       "integrity": "sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==",
-      "dev": true,
       "license": "MIT",
       "engines": {
         "node": ">=8"
@@ -6739,7 +6653,6 @@
       "version": "3.35.0",
       "resolved": "https://registry.npmjs.org/sucrase/-/sucrase-3.35.0.tgz",
       "integrity": "sha512-8EbVDiu9iN/nESwxeSxDKe0dunta1GOlHufmSSXxMD2z2/tMZpDMpvXQGsc+ajGo8y2uYUmixaSRUc/QPoQ0GA==",
-      "dev": true,
       "license": "MIT",
       "dependencies": {
         "@jridgewell/gen-mapping": "^0.3.2",
@@ -6775,7 +6688,6 @@
       "version": "1.0.0",
       "resolved": "https://registry.npmjs.org/supports-preserve-symlinks-flag/-/supports-preserve-symlinks-flag-1.0.0.tgz",
       "integrity": "sha512-ot0WnXS9fgdkgIcePe6RHNk1WA8+muPa6cSjeR3V8K27q9BB1rTE3R1p7Hv0z1ZyAc8s6Vvv8DIyWf681MAt0w==",
-      "dev": true,
       "license": "MIT",
       "engines": {
         "node": ">= 0.4"
@@ -6798,7 +6710,6 @@
       "version": "3.4.17",
       "resolved": "https://registry.npmjs.org/tailwindcss/-/tailwindcss-3.4.17.tgz",
       "integrity": "sha512-w33E2aCvSDP0tW9RZuNXadXlkHXqFzSkQew/aIa2i/Sj8fThxwovwlXHSPXTbAHwEIhBFXAedUhP2tueAKP8Og==",
-      "dev": true,
       "license": "MIT",
       "dependencies": {
         "@alloc/quick-lru": "^5.2.0",
@@ -6852,7 +6763,6 @@
       "version": "3.3.1",
       "resolved": "https://registry.npmjs.org/thenify/-/thenify-3.3.1.tgz",
       "integrity": "sha512-RVZSIV5IG10Hk3enotrhvz0T9em6cyHBLkH/YAZuKqd8hRkKhSfCGIcP2KUY0EPxndzANBmNllzWPwak+bheSw==",
-      "dev": true,
       "license": "MIT",
       "dependencies": {
         "any-promise": "^1.0.0"
@@ -6862,7 +6772,6 @@
       "version": "1.6.0",
       "resolved": "https://registry.npmjs.org/thenify-all/-/thenify-all-1.6.0.tgz",
       "integrity": "sha512-RNxQH/qI8/t3thXJDwcstUO4zeqo64+Uy/+sNVRBx4Xn2OX+OZ9oP+iJnNFqplFra2ZUVeKCSa2oVWi3T4uVmA==",
-      "dev": true,
       "license": "MIT",
       "dependencies": {
         "thenify": ">= 3.1.0 < 4"
@@ -6881,7 +6790,6 @@
       "version": "5.0.1",
       "resolved": "https://registry.npmjs.org/to-regex-range/-/to-regex-range-5.0.1.tgz",
       "integrity": "sha512-65P7iz6X5yEr1cwcgvQxbbIw7Uk3gOy5dIdtZ4rDveLqhrdJP+Li/Hx6tyK0NEb+2GCyneCMJiGqrADCSNk8sQ==",
-      "dev": true,
       "license": "MIT",
       "dependencies": {
         "is-number": "^7.0.0"
@@ -6913,7 +6821,6 @@
       "version": "0.1.13",
       "resolved": "https://registry.npmjs.org/ts-interface-checker/-/ts-interface-checker-0.1.13.tgz",
       "integrity": "sha512-Y/arvbn+rrz3JCKl9C4kVNfTfSm2/mEp5FSz5EsZSANGPSlQrpRI5M4PKF+mJnE52jOO90PnPSc3Ur3bTQw0gA==",
-      "dev": true,
       "license": "Apache-2.0"
     },
     "node_modules/tslib": {
@@ -7067,9 +6974,21 @@
       "version": "1.0.2",
       "resolved": "https://registry.npmjs.org/util-deprecate/-/util-deprecate-1.0.2.tgz",
       "integrity": "sha512-EPD5q1uXyFxJpCrLnCc1nHnq3gOa6DZBocAIiI2TaSCA7VCJ1UJDMagCzIkXNsUYfD1daK//LTEQ8xiIbrHtcw==",
-      "dev": true,
       "license": "MIT"
     },
+    "node_modules/uuid": {
+      "version": "11.1.0",
+      "resolved": "https://registry.npmjs.org/uuid/-/uuid-11.1.0.tgz",
+      "integrity": "sha512-0/A9rDy9P7cJ+8w1c9WD9V//9Wj15Ce2MPz8Ri6032usz+NfePxx5AcN3bN+r6ZL6jEo066/yNYB3tn4pQEx+A==",
+      "funding": [
+        "https://github.com/sponsors/broofa",
+        "https://github.com/sponsors/ctavan"
+      ],
+      "license": "MIT",
+      "bin": {
+        "uuid": "dist/esm/bin/uuid"
+      }
+    },
     "node_modules/vaul": {
       "version": "0.9.9",
       "resolved": "https://registry.npmjs.org/vaul/-/vaul-0.9.9.tgz",
@@ -7185,7 +7104,6 @@
       "version": "2.0.2",
       "resolved": "https://registry.npmjs.org/which/-/which-2.0.2.tgz",
       "integrity": "sha512-BLI3Tl1TW3Pvl70l3yq3Y64i+awpwXqsGBYWkkqMtnbXgrMD+yj7rhW0kuEDxzJaYXGjEW5ogapKNMEKNMjibA==",
-      "dev": true,
       "license": "ISC",
       "dependencies": {
         "isexe": "^2.0.0"
@@ -7211,7 +7129,6 @@
       "version": "8.1.0",
       "resolved": "https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-8.1.0.tgz",
       "integrity": "sha512-si7QWI6zUMq56bESFvagtmzMdGOtoxfR+Sez11Mobfc7tm+VkUckk9bW2UeffTGVUbOksxmSw0AA2gs8g71NCQ==",
-      "dev": true,
       "license": "MIT",
       "dependencies": {
         "ansi-styles": "^6.1.0",
@@ -7230,7 +7147,6 @@
       "version": "7.0.0",
       "resolved": "https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-7.0.0.tgz",
       "integrity": "sha512-YVGIj2kamLSTxw6NsZjoBxfSwsn0ycdesmc4p+Q21c5zPuZ1pl+NfxVdxPtdHvmNVOQ6XSYG4AUtyt/Fi7D16Q==",
-      "dev": true,
       "license": "MIT",
       "dependencies": {
         "ansi-styles": "^4.0.0",
@@ -7248,7 +7164,6 @@
       "version": "5.0.1",
       "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.1.tgz",
       "integrity": "sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==",
-      "dev": true,
       "license": "MIT",
       "engines": {
         "node": ">=8"
@@ -7258,14 +7173,12 @@
       "version": "8.0.0",
       "resolved": "https://registry.npmjs.org/emoji-regex/-/emoji-regex-8.0.0.tgz",
       "integrity": "sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A==",
-      "dev": true,
       "license": "MIT"
     },
     "node_modules/wrap-ansi-cjs/node_modules/string-width": {
       "version": "4.2.3",
       "resolved": "https://registry.npmjs.org/string-width/-/string-width-4.2.3.tgz",
       "integrity": "sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==",
-      "dev": true,
       "license": "MIT",
       "dependencies": {
         "emoji-regex": "^8.0.0",
@@ -7280,7 +7193,6 @@
       "version": "6.0.1",
       "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz",
       "integrity": "sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==",
-      "dev": true,
       "license": "MIT",
       "dependencies": {
         "ansi-regex": "^5.0.1"
@@ -7293,7 +7205,6 @@
       "version": "6.2.1",
       "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-6.2.1.tgz",
       "integrity": "sha512-bN798gFfQX+viw3R7yrGWRqnrN2oRkEkUjjl4JNn4E8GxxbjtG3FbrEIIY3l8/hrwUwIeCZvi4QuOTP4MErVug==",
-      "dev": true,
       "license": "MIT",
       "engines": {
         "node": ">=12"
@@ -7327,7 +7238,6 @@
       "version": "2.6.0",
       "resolved": "https://registry.npmjs.org/yaml/-/yaml-2.6.0.tgz",
       "integrity": "sha512-a6ae//JvKDEra2kdi1qzCyrJW/WZCgFi8ydDV+eXExl95t+5R+ijnqHJbz9tmMh8FUjx3iv2fCQ4dclAQlO2UQ==",
-      "dev": true,
       "license": "ISC",
       "bin": {
         "yaml": "bin.mjs"
diff --git a/package.json b/package.json
index 3f2a7e4..ef8011e 100644
--- a/package.json
+++ b/package.json
@@ -60,6 +60,7 @@
     "sonner": "^1.5.0",
     "tailwind-merge": "^2.5.2",
     "tailwindcss-animate": "^1.0.7",
+    "uuid": "^11.1.0",
     "vaul": "^0.9.3",
     "zod": "^3.23.8"
   },
@@ -69,6 +70,7 @@
     "@types/node": "^22.5.5",
     "@types/react": "^18.3.3",
     "@types/react-dom": "^18.3.0",
+    "@types/uuid": "^10.0.0",
     "@vitejs/plugin-react-swc": "^3.5.0",
     "autoprefixer": "^10.4.20",
     "eslint": "^9.9.0",
diff --git a/src/components/contact/use-contact-form-submit.ts b/src/components/contact/use-contact-form-submit.ts
index 58aae34..4703cfc 100644
--- a/src/components/contact/use-contact-form-submit.ts
+++ b/src/components/contact/use-contact-form-submit.ts
@@ -1,10 +1,11 @@
-
+// src/components/contact/use-contact-form-submit.ts
 import { useState } from "react";
 import { toast } from "sonner";
 import { supabase } from "@/integrations/supabase/client";
 import { ContactFormValues } from "./contact-form-schema";
-import { countFileRows, readFileAsBase64 } from "./file-utils";
+import { countFileRows } from "./file-utils"; // Keep row counting
 import { MAX_ROWS } from "./contact-form-schema";
+import { v4 as uuidv4 } from "uuid"; // Need to install uuid
 
 export function useContactFormSubmit(formType: string, onSuccess?: () => void) {
   const [isSubmitting, setIsSubmitting] = useState(false);
@@ -26,12 +27,12 @@ export function useContactFormSubmit(formType: string, onSuccess?: () => void) {
 
       const file = values.addressFile[0];
       console.log(`Processing file: ${file.name}, size: ${file.size}, type: ${file.type}`);
-      
-      // Verify row count
+
+      // Verify row count (optional but good to keep)
       try {
         const rowCount = await countFileRows(file);
         console.log("File contains approximately", rowCount, "rows");
-        
+
         if (rowCount > MAX_ROWS) {
           toast.error(`Sorry, only files with up to ${MAX_ROWS} addresses are allowed for the sample report.`);
           setIsSubmitting(false);
@@ -41,82 +42,69 @@ export function useContactFormSubmit(formType: string, onSuccess?: () => void) {
         console.error("Error counting rows:", countError);
         // Continue even if row counting fails
       }
-      
-      // Convert file to base64 for storage and transmission
-      const fileBase64 = await readFileAsBase64(file);
-      console.log(`File converted to base64, length: ${fileBase64.length}`);
-      
-      // Create contact record in database
-      const contactData = {
+
+      // 1. Upload file to Supabase Storage
+      const fileExt = file.name.split(".").pop();
+      const uniqueFileName = `${uuidv4()}.${fileExt}`;
+      const storagePath = `public/${uniqueFileName}`; // Store in a 'public' folder within the bucket for simplicity, adjust if needed
+
+      console.log(`Uploading file to Supabase Storage at path: ${storagePath}`);
+      const { data: uploadData, error: uploadError } = await supabase.storage
+        .from("pending-uploads") // Ensure this bucket exists and has policies set
+        .upload(storagePath, file);
+
+      if (uploadError) {
+        console.error("Supabase Storage upload error:", uploadError);
+        throw new Error(`Failed to upload file: ${uploadError.message}`);
+      }
+
+      console.log("File uploaded successfully:", uploadData);
+
+      // 2. Prepare data for the notify-admin function
+      const notificationPayload = {
         full_name: values.fullName,
-        position: values.position,
-        company: values.company,
         email: values.email,
+        company: values.company,
+        position: values.position,
         phone: values.phone,
-        form_type: formType,
-        status: "pending",
-        file_name: file.name,
-        file_type: file.type,
-        file_data: fileBase64
+        storagePath: storagePath, // Pass the storage path
       };
 
-      // Save to Supabase
-      console.log("Saving contact data to Supabase");
-      const { data, error } = await supabase
-        .from('contacts')
-        .insert([contactData])
-        .select();
-
-      if (error) {
-        console.error("Supabase error:", error);
-        throw new Error(error.message);
-      }
+      // 3. Call the notify-admin function
+      console.log(`Calling notify-admin function with payload:`, notificationPayload);
+      const { data: functionData, error: functionError } = await supabase.functions.invoke("notify-admin", {
+        body: notificationPayload
+      });
 
-      console.log("Contact successfully created:", data);
-      
-      if (data && data.length > 0) {
-        const contactId = data[0].id;
-        
-        // Send notification email with the file attachment
+      if (functionError) {
+        console.error("notify-admin function invocation error:", functionError);
+        // Attempt to delete the uploaded file if function call fails
         try {
-          console.log(`Sending direct notification for contact ID ${contactId} with file: ${file.name}`);
-          
-          const notifyResponse = await supabase.functions.invoke("notify-admin", {
-            body: { 
-              contactId: contactId
-            }
-          });
-          
-          if (notifyResponse.error) {
-            console.error("Email notification error:", notifyResponse.error);
-            console.error("Error details:", JSON.stringify(notifyResponse.error));
-            throw new Error(`Failed to send notification: ${notifyResponse.error.message || 'Unknown error'}`);
-          } else {
-            console.log("Email notification success:", notifyResponse.data);
-            
-            // Mark as success when email is sent
-            if (onSuccess) {
-              onSuccess();
-            }
-            
-            toast.success(
-              "Thank you for your submission! Your address list has been sent for review and we'll be in touch soon.", 
-              { duration: 6000 }
-            );
-            
-            return true;
-          }
-        } catch (functionCallError) {
-          console.error("Failed to call notify-admin function:", functionCallError);
-          console.error("Error details:", JSON.stringify(functionCallError));
-          throw new Error(`Failed to call notify-admin function: ${functionCallError.message || 'Unknown error'}`);
+          await supabase.storage.from("pending-uploads").remove([storagePath]);
+          console.log("Cleaned up uploaded file after function error.");
+        } catch (cleanupError) {
+          console.error("Failed to cleanup uploaded file after function error:", cleanupError);
         }
-      } else {
-        throw new Error("Failed to create contact record");
+        throw new Error(`Failed to process submission: ${functionError.message || "Unknown error"}`);
       }
+
+      console.log("notify-admin function success:", functionData);
+
+      // Mark as success
+      if (onSuccess) {
+        onSuccess();
+      }
+
+      toast.success(
+        "Thank you for your submission! Your address list has been sent for review and we'll be in touch soon.",
+        { duration: 6000 }
+      );
+
+      return true;
+
     } catch (error) {
       console.error("Form submission error:", error);
-      toast.error("Sorry, something went wrong. Please try again or contact support@lintels.in");
+      toast.error(`Sorry, something went wrong. Please try again or contact support@lintels.in. Error: ${error.message}`);
       return false;
     } finally {
       setIsSubmitting(false);
@@ -128,3 +116,4 @@ export function useContactFormSubmit(formType: string, onSuccess?: () => void) {
     submitContactForm
   };
 }
+
diff --git a/supabase/functions/_shared/cors.ts b/supabase/functions/_shared/cors.ts
new file mode 100644
index 0000000..a79aef2
--- /dev/null
+++ b/supabase/functions/_shared/cors.ts
@@ -0,0 +1,7 @@
+// supabase/functions/_shared/cors.ts
+export const corsHeaders = {
+  "Access-Control-Allow-Origin": "*", // Allow requests from any origin (adjust for production)
+  "Access-Control-Allow-Headers": "authorization, x-client-info, apikey, content-type",
+  "Access-Control-Allow-Methods": "POST, OPTIONS", // Allow POST and OPTIONS methods
+};
+
diff --git a/supabase/functions/notify-admin/index.ts b/supabase/functions/notify-admin/index.ts
index b4bac2f..122b3a4 100644
--- a/supabase/functions/notify-admin/index.ts
+++ b/supabase/functions/notify-admin/index.ts
@@ -1,164 +1,213 @@
+// supabase/functions/notify-admin/index.ts
+import { serve } from "https://deno.land/std@0.168.0/http/server.ts";
+import { createClient } from "https://esm.sh/@supabase/supabase-js@2";
+import { corsHeaders } from "../_shared/cors.ts";
+import { Buffer } from "https://deno.land/std@0.168.0/io/buffer.ts";
 
-import { serve } from 'https://deno.land/x/sift@0.6.0/mod.ts';
-import { getContactById } from './utils/contacts.ts';
-import { sendEmail } from './utils/email-sender.ts';
-import { processFileData } from './utils/file-processor.ts';
-import { corsHeaders } from './utils/cors.ts';
-import { createClient } from 'https://esm.sh/@supabase/supabase-js@2';
+// --- Interfaces ---
+interface UserDetails {
+  full_name: string;
+  email: string;
+  company?: string;
+  position?: string;
+  phone?: string;
+}
 
-serve(async (req) => {
+interface SubmissionData extends UserDetails {
+  storagePath: string; // Path to the uploaded file in Supabase Storage
+}
+
+// --- Environment Variables ---
+const supabaseUrl = Deno.env.get("SUPABASE_URL")!;
+const serviceRoleKey = Deno.env.get("SUPABASE_SERVICE_ROLE_KEY")!;
+const sendgridApiKey = Deno.env.get("SENDGRID_API_KEY")!;
+const approverEmail = Deno.env.get("APPROVER_EMAIL")!;
+const senderEmail = Deno.env.get("SENDER_EMAIL")!;
+const supabaseAnonKey = Deno.env.get("SUPABASE_ANON_KEY")!; // Needed for generating signed URLs
+
+// --- Main Function Logic ---
+serve(async (req: Request) => {
   // Handle CORS preflight requests
-  if (req.method === 'OPTIONS') {
-    console.log('Handling OPTIONS preflight request');
-    return new Response(null, { 
-      status: 204,
-      headers: corsHeaders 
-    });
+  if (req.method === "OPTIONS") {
+    console.log("Handling OPTIONS preflight request");
+    return new Response("ok", { headers: corsHeaders });
   }
-  
+
   try {
-    console.log('📨 DIRECT EMAIL WORKAROUND: notify-admin function called with method:', req.method);
-    
-    // Parse the request body
-    const body = await req.json();
-    const { contactId } = body;
-
-    console.log(`📝 Processing contact ID: ${contactId}`);
-    
-    if (!contactId) {
-      throw new Error("Contact ID is required");
+    console.log(`notify-admin function called with method: ${req.method}`);
+
+    if (req.method !== "POST") {
+      throw new Error("Method Not Allowed: Only POST requests are accepted.");
+    }
+
+    const body: SubmissionData = await req.json();
+    console.log("Received body:", body);
+
+    const { full_name, email, company, position, phone, storagePath } = body;
+
+    if (!full_name || !email || !storagePath) {
+      throw new Error("Missing required fields: full_name, email, and storagePath are required.");
     }
 
-    // Get contact data from Supabase
-    const contact = await getContactById(contactId);
-    console.log("Retrieved contact:", JSON.stringify({
-      id: contact.id,
-      name: contact.full_name,
-      email: contact.email,
-      file_name: contact.file_name,
-      file_type: contact.file_type
-    }));
-    
-    // Process the file data to ensure proper encoding as plain text
-    const fileContent = processFileData(contact.file_data);
-    if (!fileContent) {
-      throw new Error("Failed to process file data");
+    const supabaseAdmin = createClient(supabaseUrl, serviceRoleKey);
+    const supabaseUserClient = createClient(supabaseUrl, supabaseAnonKey); // For signed URL
+
+    // 1. Record the initial submission attempt
+    const { data: submissionRecord, error: submissionError } = await supabaseAdmin
+      .from("pending_submissions")
+      .insert({
+        full_name,
+        email,
+        company,
+        position,
+        phone,
+        storage_path: storagePath,
+        status: "pending",
+      })
+      .select()
+      .single();
+
+    if (submissionError) {
+      console.error("Error inserting into pending_submissions:", submissionError);
+      throw new Error(`Failed to record submission: ${submissionError.message}`);
     }
-    console.log("Successfully processed file data, length:", fileContent.length);
-    
-    // Build email content with clearer formatting and critical information
+
+    const submissionId = submissionRecord.id;
+    console.log(`Submission recorded with ID: ${submissionId}`);
+
+    // 2. Download the file content from Storage
+    console.log(`Attempting to download file from path: ${storagePath}`);
+    const { data: fileData, error: downloadError } = await supabaseAdmin.storage
+      .from("pending-uploads") // Ensure this matches your bucket name
+      .download(storagePath);
+
+    if (downloadError) {
+      console.error("Error downloading file from storage:", downloadError);
+      // Attempt to update status to failed before throwing
+      await supabaseAdmin.from("pending_submissions").update({ status: "failed", error_message: `File download failed: ${downloadError.message}` }).eq("id", submissionId);
+      throw new Error(`Failed to download file: ${downloadError.message}`);
+    }
+
+    if (!fileData) {
+      await supabaseAdmin.from("pending_submissions").update({ status: "failed", error_message: "File download returned no data." }).eq("id", submissionId);
+      throw new Error("File download returned no data.");
+    }
+
+    console.log(`File downloaded successfully, size: ${fileData.size} bytes`);
+
+    // 3. Process file content (ensure it's plain text CSV)
+    const fileContentArrayBuffer = await fileData.arrayBuffer();
+    const fileContentString = new TextDecoder().decode(fileContentArrayBuffer);
+    const fileContentBase64 = btoa(fileContentString); // Encode as Base64 for SendGrid attachment
+
+    // Extract original filename from path
+    const fileName = storagePath.split("/").pop() || "submitted_data.csv";
+
+    // 4. Generate unique approval/rejection URLs
+    // Use signed URLs for the process-approval function
+    const functionUrl = `${supabaseUrl}/functions/v1/process-approval`;
+    const approveUrl = `${functionUrl}?id=${submissionId}&action=approve`;
+    const rejectUrl = `${functionUrl}?id=${submissionId}&action=reject`;
+
+    // 5. Build Email Content
     const htmlContent = `
-      <h1>New Address List Submission</h1>
-      <p>A new address list has been submitted by ${contact.full_name} (${contact.email}).</p>
+      <h1>New Address List Submission for Approval</h1>
+      <p>A new address list has been submitted by ${full_name} (${email}).</p>
       <h2>Contact Details:</h2>
       <ul>
-        <li><strong>Full Name:</strong> ${contact.full_name}</li>
-        <li><strong>Position:</strong> ${contact.position || 'Not provided'}</li>
-        <li><strong>Company:</strong> ${contact.company || 'Not provided'}</li>
-        <li><strong>Email:</strong> ${contact.email}</li>
-        <li><strong>Phone:</strong> ${contact.phone}</li>
-        <li><strong>Submission Time:</strong> ${new Date().toISOString()}</li>
-        <li><strong>Contact ID:</strong> ${contactId}</li>
+        <li><strong>Full Name:</strong> ${full_name}</li>
+        <li><strong>Email:</strong> ${email}</li>
+        <li><strong>Company:</strong> ${company || "Not provided"}</li>
+        <li><strong>Position:</strong> ${position || "Not provided"}</li>
+        <li><strong>Phone:</strong> ${phone || "Not provided"}</li>
+        <li><strong>Submission ID:</strong> ${submissionId}</li>
       </ul>
-      <p>Please see the attached file for addresses.</p>
-      <p><strong>IMPORTANT:</strong> This is a direct submission. No approval step is required.</p>
+      <p>The submitted file (${fileName}) is attached for your review.</p>
+      <p><strong>Please approve or reject this submission:</strong></p>
+      <p>
+        <a href="${approveUrl}" style="background-color: #4CAF50; color: white; padding: 10px 20px; text-align: center; text-decoration: none; display: inline-block; border-radius: 5px; margin-right: 10px;">Approve</a>
+        <a href="${rejectUrl}" style="background-color: #f44336; color: white; padding: 10px 20px; text-align: center; text-decoration: none; display: inline-block; border-radius: 5px;">Reject</a>
+      </p>
     `;
-    
-    // Plain text version of the email
+
     const textContent = `
-URGENT: New address list submission from ${contact.full_name} (${contact.email})
-File: ${contact.file_name}
-Contact ID: ${contactId}
-Submission Time: ${new Date().toISOString()}
-
-Contact Details:
-- Full Name: ${contact.full_name}
-- Email: ${contact.email}
-- Phone: ${contact.phone}
-- Company: ${contact.company || 'Not provided'}
-- Position: ${contact.position || 'Not provided'}
-
-IMPORTANT: This is a direct submission. No approval step is required.
+      New address list submission for approval from ${full_name} (${email}).
+      Submission ID: ${submissionId}
+      File: ${fileName}
+      Contact Details:
+      - Full Name: ${full_name}
+      - Email: ${email}
+      - Company: ${company || "Not provided"}
+      - Position: ${position || "Not provided"}
+      - Phone: ${phone || "Not provided"}
+
+      The submitted file is attached.
+
+      Approve: ${approveUrl}
+      Reject: ${rejectUrl}
     `;
-    
-    console.log("Sending direct email to jamie@lintels.in");
-    
-    // Send the email with the CSV file as a plain text attachment
-    const emailResult = await sendEmail(
-      'jamie@lintels.in',
-      `[URGENT SUBMISSION] Address List from ${contact.full_name}`,
-      htmlContent,
-      textContent,
-      fileContent,
-      contact.file_name,
-      contact.file_type || 'text/csv'
-    );
-    
-    if (!emailResult.success) {
-      console.error("Email sending failed:", emailResult.message);
-      throw new Error(`Failed to send email: ${emailResult.message}`);
-    }
-    
-    console.log("Email successfully sent to jamie@lintels.in");
-    
-    // Update contact status to "submitted"
-    const supabase = createClient(
-      Deno.env.get('SUPABASE_URL')!,
-      Deno.env.get('SUPABASE_SERVICE_ROLE_KEY')!
-    );
-    
-    const { error: updateError } = await supabase
-      .from('contacts')
-      .update({ status: 'submitted' })
-      .eq('id', contactId);
-      
-    if (updateError) {
-      console.error('Error updating contact status:', updateError);
-    } else {
-      console.log(`Contact status updated to "submitted" for ID: ${contactId}`);
+
+    // 6. Send Email via SendGrid
+    const emailPayload = {
+      personalizations: [{ to: [{ email: approverEmail }] }],
+      from: { email: senderEmail, name: "Lintels Submission" }, // Use configured sender
+      subject: `Approval Required: New Address List Submission (${full_name})`,
+      content: [
+        { type: "text/plain", value: textContent },
+        { type: "text/html", value: htmlContent },
+      ],
+      attachments: [
+        {
+          content: fileContentBase64,
+          filename: fileName,
+          type: "text/csv", // Assuming CSV
+          disposition: "attachment",
+        },
+      ],
+    };
+
+    console.log("Sending email via SendGrid...");
+    const sendgridResponse = await fetch("https://api.sendgrid.com/v3/mail/send", {
+      method: "POST",
+      headers: {
+        Authorization: `Bearer ${sendgridApiKey}`,
+        "Content-Type": "application/json",
+      },
+      body: JSON.stringify(emailPayload),
+    });
+
+    if (!sendgridResponse.ok) {
+      const errorBody = await sendgridResponse.text();
+      console.error(`SendGrid error: ${sendgridResponse.status} ${sendgridResponse.statusText}`, errorBody);
+      // Attempt to update status to failed before throwing
+      await supabaseAdmin.from("pending_submissions").update({ status: "failed", error_message: `SendGrid failed: ${sendgridResponse.statusText}` }).eq("id", submissionId);
+      throw new Error(`Failed to send email via SendGrid: ${sendgridResponse.statusText}`);
     }
 
+    console.log(`Email sent successfully to ${approverEmail}`);
+
+    // 7. Return success response to frontend
     return new Response(
-      JSON.stringify({ 
-        success: true, 
-        message: `Email sent directly to jamie@lintels.in with attachment: ${contact.file_name}`,
-        emailFile: contact.file_name,
-        contactStatus: 'submitted',
-        timestamp: new Date().toISOString()
-      }), 
-      { 
-        status: 200, 
-        headers: { ...corsHeaders, "Content-Type": "application/json" } 
+      JSON.stringify({
+        success: true,
+        message: `Submission received. Approval email sent to ${approverEmail}. Submission ID: ${submissionId}`,
+        submissionId: submissionId,
+      }),
+      {
+        status: 200,
+        headers: { ...corsHeaders, "Content-Type": "application/json" },
       }
     );
+
   } catch (err) {
-    console.error('❌ ERROR in notify-admin function:', err);
-    
-    // Send a fallback error notification email
-    try {
-      await sendEmail(
-        'jamie@lintels.in',
-        '[ERROR] Address List Submission Error',
-        `<h1>Error Processing Address Submission</h1><p>There was an error processing a submission: ${err.message}</p>`,
-        `Error Processing Address Submission: ${err.message}`,
-        '',
-        'error_log.txt',
-        'text/plain'
-      );
-      console.log("Sent error notification email");
-    } catch (emailErr) {
-      console.error("Failed to send error notification:", emailErr);
-    }
-    
+    console.error("❌ ERROR in notify-admin function:", err);
     return new Response(
-      JSON.stringify({ 
-        error: err.message,
-        timestamp: new Date().toISOString()
-      }), 
-      { 
-        status: 500, 
-        headers: { ...corsHeaders, "Content-Type": "application/json" } 
+      JSON.stringify({ error: err.message }),
+      {
+        status: err.message.includes("Method Not Allowed") ? 405 : 500,
+        headers: { ...corsHeaders, "Content-Type": "application/json" },
       }
     );
   }
 });
+
diff --git a/supabase/functions/process-approval/index.ts b/supabase/functions/process-approval/index.ts
new file mode 100644
index 0000000..1397511
--- /dev/null
+++ b/supabase/functions/process-approval/index.ts
@@ -0,0 +1,184 @@
+// supabase/functions/process-approval/index.ts
+import { serve } from "https://deno.land/std@0.168.0/http/server.ts";
+import { createClient } from "https://esm.sh/@supabase/supabase-js@2";
+import { corsHeaders } from "../_shared/cors.ts";
+
+// --- Environment Variables ---
+const supabaseUrl = Deno.env.get("SUPABASE_URL")!;
+const serviceRoleKey = Deno.env.get("SUPABASE_SERVICE_ROLE_KEY")!;
+
+// --- Main Function Logic ---
+serve(async (req: Request) => {
+  // Handle CORS preflight requests
+  if (req.method === "OPTIONS") {
+    console.log("Handling OPTIONS preflight request for process-approval");
+    return new Response("ok", { headers: corsHeaders });
+  }
+
+  try {
+    console.log(`process-approval function called with method: ${req.method}`);
+
+    if (req.method !== "GET") {
+      throw new Error("Method Not Allowed: Only GET requests are accepted for approval/rejection.");
+    }
+
+    const url = new URL(req.url);
+    const submissionId = url.searchParams.get("id");
+    const action = url.searchParams.get("action"); // "approve" or "reject"
+
+    if (!submissionId || !action || (action !== "approve" && action !== "reject")) {
+      throw new Error("Missing or invalid parameters: 'id' and 'action' (approve/reject) are required.");
+    }
+
+    console.log(`Processing action: ${action} for submission ID: ${submissionId}`);
+
+    const supabaseAdmin = createClient(supabaseUrl, serviceRoleKey);
+
+    // 1. Fetch the pending submission details
+    const { data: submission, error: fetchError } = await supabaseAdmin
+      .from("pending_submissions")
+      .select("*, status, storage_path")
+      .eq("id", submissionId)
+      .single();
+
+    if (fetchError) {
+      console.error("Error fetching submission:", fetchError);
+      throw new Error(`Submission not found or error fetching: ${fetchError.message}`);
+    }
+
+    if (submission.status !== "pending") {
+      return new Response(`Submission ${submissionId} has already been processed (Status: ${submission.status}).`, { status: 409 }); // Conflict
+    }
+
+    let responseMessage = "";
+
+    // 2. Perform Approve or Reject action
+    if (action === "approve") {
+      console.log(`Approving submission ID: ${submissionId}`);
+
+      // a. Copy file from pending to approved bucket
+      const sourcePath = submission.storage_path;
+      const destinationPath = `approved/${sourcePath.split("/").pop()}`;
+      console.log(`Copying file from ${sourcePath} to ${destinationPath}`);
+      const { error: copyError } = await supabaseAdmin.storage
+        .from("pending-uploads")
+        .copy(sourcePath, { destinationBucket: "approved-uploads", destinationPath: destinationPath });
+
+      if (copyError) {
+        console.error("Error copying file to approved bucket:", copyError);
+        await supabaseAdmin.from("pending_submissions").update({ status: "failed", error_message: `File copy failed: ${copyError.message}` }).eq("id", submissionId);
+        throw new Error(`Failed to copy file to approved bucket: ${copyError.message}`);
+      }
+      console.log("File copied successfully.");
+
+      // b. Insert contact details into the main contacts table
+      console.log("Inserting contact details into main table...");
+      const { error: insertError } = await supabaseAdmin
+        .from("contacts") // Assuming your main table is named 'contacts'
+        .insert({
+          full_name: submission.full_name,
+          email: submission.email,
+          company: submission.company,
+          position: submission.position,
+          phone: submission.phone,
+          // Add reference to the approved file if needed
+          approved_file_path: destinationPath,
+          status: "approved", // Or whatever status indicates completion
+          // Add any other relevant fields from submission
+        });
+
+      if (insertError) {
+        console.error("Error inserting into contacts table:", insertError);
+        // Consider how to handle this - maybe update pending status to failed?
+        await supabaseAdmin.from("pending_submissions").update({ status: "failed", error_message: `Contact insert failed: ${insertError.message}` }).eq("id", submissionId);
+        // Optionally try to delete the copied file?
+        throw new Error(`Failed to insert contact details: ${insertError.message}`);
+      }
+      console.log("Contact details inserted successfully.");
+
+      // c. Delete the original file from pending bucket
+      console.log(`Deleting original file: ${sourcePath}`);
+      const { error: deleteError } = await supabaseAdmin.storage
+        .from("pending-uploads")
+        .remove([sourcePath]);
+
+      if (deleteError) {
+        // Log error but proceed, as main action succeeded
+        console.error("Error deleting original file from pending bucket:", deleteError);
+      }
+      console.log("Original file deleted.");
+
+      // d. Update pending submission status to approved
+      console.log("Updating pending submission status to approved.");
+      const { error: updateStatusError } = await supabaseAdmin
+        .from("pending_submissions")
+        .update({ status: "approved" })
+        .eq("id", submissionId);
+
+      if (updateStatusError) {
+        // Log error but consider main action successful
+        console.error("Error updating pending submission status:", updateStatusError);
+      }
+
+      // --- TODO: Trigger Bright Data Matching Process Here --- 
+      console.log(`Placeholder: Trigger Bright Data matching for contact/file: ${destinationPath}`);
+      // Add your Bright Data API call or trigger logic here
+      // --------------------------------------------------------
+
+      responseMessage = `Submission ${submissionId} approved successfully. File moved and contact created. Bright Data matching initiated (placeholder).`;
+
+    } else if (action === "reject") {
+      console.log(`Rejecting submission ID: ${submissionId}`);
+
+      // a. Delete the file from pending bucket
+      const sourcePath = submission.storage_path;
+      console.log(`Deleting file: ${sourcePath}`);
+      const { error: deleteError } = await supabaseAdmin.storage
+        .from("pending-uploads")
+        .remove([sourcePath]);
+
+      if (deleteError) {
+        console.error("Error deleting file from pending bucket on rejection:", deleteError);
+        // Update status to failed, but still report rejection
+        await supabaseAdmin.from("pending_submissions").update({ status: "failed", error_message: `File deletion failed on rejection: ${deleteError.message}` }).eq("id", submissionId);
+        // Continue to report rejection
+      }
+      console.log("File deleted on rejection.");
+
+      // b. Update pending submission status to rejected
+      console.log("Updating pending submission status to rejected.");
+      const { error: updateStatusError } = await supabaseAdmin
+        .from("pending_submissions")
+        .update({ status: "rejected" })
+        .eq("id", submissionId);
+
+      if (updateStatusError) {
+        console.error("Error updating pending submission status to rejected:", updateStatusError);
+        // Log error but proceed
+      }
+
+      responseMessage = `Submission ${submissionId} rejected successfully. File deleted.`;
+    }
+
+    // 3. Return success response (HTML page for user feedback)
+    return new Response(
+      `<html><body><h1>Action Complete</h1><p>${responseMessage}</p></body></html>`,
+      {
+        status: 200,
+        headers: { ...corsHeaders, "Content-Type": "text/html" }, // Return HTML
+      }
+    );
+
+  } catch (err) {
+    console.error("❌ ERROR in process-approval function:", err);
+    // Return an error HTML page
+    return new Response(
+      `<html><body><h1>Error Processing Request</h1><p>An error occurred: ${err.message}</p></body></html>`,
+      {
+        status: err.message.includes("Method Not Allowed") ? 405 : (err.message.includes("Submission not found") ? 404 : 500),
+        headers: { ...corsHeaders, "Content-Type": "text/html" },
+      }
+    );
+  }
+});
+
